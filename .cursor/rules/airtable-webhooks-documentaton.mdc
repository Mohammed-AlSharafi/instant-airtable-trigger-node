---
description: 
globs: 
alwaysApply: true
---
Webhooks
Create a webhook
post
https://api.airtable.com/v0/bases/{baseId}/webhooks
Creates a new webhook in the specified base. Payloads may be generated and the notification URL (if given) will get a ping shortly after this completes.

The number of webhooks per base is limited to 10. A single OAuth integration can create up to 2 webhooks per base.

Each webhook created with OAuth or personal access token will expire and be disabled after 7 days. The webhook life can be extended while it is still active by calling refresh webhook or list webhook payloads. After a webhook has expired and been disabled, the webhook's metadata and past payloads can be accessed for an additional 7 days.

Creator level permissions are required in order to register a webhook.

Requirements
Authentication	Personal access token, OAuth integration
Scope	
Scopes depend on the subscribed dataTypes, more details here

User role	
Base creator

Billing plans	All plans
Path parameters
baseId
string
Request body
notificationUrl
optional<string>
An optional url that can receive notification pings. See notification delivery.

specification
object
A JSON object that describe the types of changes the webhook is interested in.

options
Webhooks specification
Response format
id
string
An identifier for the webhook (WebhookId).

macSecretBase64
string
A MAC secret. The client should store this value to authenticate webhook pings. There is no way to retrieve this value after the initial creation of the webhook.

expirationTime
optional<string>
The time when the webhook expires and is disabled in the ISO format. The webhook will not expire if this is null (in the case User API keys are used)

Request (example)
Copy
curl -X POST "https://api.airtable.com/v0/bases/{baseId}/webhooks" \
-H "Authorization: Bearer YOUR_TOKEN" \
-H "Content-Type: application/json" \
--data '{
    "notificationUrl": "https://foo.com/receive-ping",
    "specification": {
      "options": {
        "filters": {
          "dataTypes": [
            "tableData"
          ],
          "recordChangeScope": "tbltp8DGLhqbUmjK1"
        }
      }
    }
  }'
200 – Response (example)
{
  "expirationTime": "2023-01-20T00:00:00.000Z",
  "id": "ach00000000000000",
  "macSecretBase64": "someBase64MacSecret"
}

Object
Webhooks specification
Endpoints that reference this object:
List webhooks
Create a webhook

object
A single webhook may watch changes in a table, view, or base. The specification defines the types of the changes that are included in the webhook's payloads.

Note that tables, fields, and views in the specification must be specified by ID rather than by name. You may find the IDs for each of these with the manage fields UI.

filters
object
A webhook specification can contain a filters object. For example, the specification for a webhook watching the data in a table is as follows:

{
  "options": {
    "filters": {
      "dataTypes": [
        "tableData"
      ],
      "recordChangeScope": "tbl00000000000000"
    }
  }
}
The table events can be filtered down even more to cover just record data changes for certain fields from specific sources.

{
  "options": {
    "filters": {
      "fromSources": [
        "client"
      ],
      "dataTypes": [
        "tableData"
      ],
      "recordChangeScope": "tbl00000000000000",
      "watchDataInFieldIds": [
        "fld00000000000000",
        "fld00000000000001",
        "fld00000000000002"
      ]
    }
  }
}
Aside from dataTypes, the keys in a filters object are optional. By default, a webhook will generate payloads across an entire base according to the specified dataTypes. We strongly recommend that your integration specify a filters object with a subset of the filter keys to ensure that your integration is notified for only the most relevant events.

recordChangeScope
optional<string>
Only generate payloads for changes in the specified TableId or ViewId.

Warning: Form view and List view are currently not supported.

dataTypes
array of ("tableData" | "tableFields" | "tableMetadata")
Only generate payloads that contain changes affecting objects of these types.

tableData: record and cell value changes
tableFields: field changes
tableMetadata: table name and description changes
changeTypes
optional<array of ("add" | "remove" | "update")>
Only generate payloads that contain changes of these types.

fromSources
optional<array of ("client" | "publicApi" | "formSubmission" | "formPageSubmission" | "automation" | "system" | "sync" | "anonymousUser" | "unknown")>
Only generate payloads for changes from these sources. If omitted, changes from all sources are reported.

client: changes generated by a user through the web or mobile clients
publicApi: changes generated through the Airtable API
formSubmission: changes generated when a form view is submitted
formPageSubmission: changes generated when an interface form builder page, form layout page, or record creation button page is submitted
automation: changes generated through an automation action
system: changes generated by system events, such as processing time function formulas
sync: changes generated through Airtable Sync
sourceOptions
optional<object>
Additional options for source filtering. This allows users to filter form view submissions by ViewId, or interface form builder page, form layout page, or record creation button page submissions by PageId.

formPageSubmission
optional<object>
pageId
optional<string>
formSubmission
optional<object>
viewId
optional<string>
watchDataInFieldIds
optional<array of strings>
Only generate payloads for changes that modify values in cells in these fields. If omitted, all fields within the table/view/base are watched.

Warning: If fields are specified and one of the specified fields are deleted, the webhook will generate an error payload and the webhook will go into an error state and payloads will no longer be generated. More information about the error reponse is available in Webhooks payload.

watchSchemasOfFieldIds
optional<array of strings>
Only generate payloads for changes that modify the schemas of these fields. If omitted, schemas of all fields within the table/view/base are watched.

Warning: If fields are specified and one of the specified fields are deleted, the webhook will generate an error payload and the webhook will go into an error state and payloads will no longer be generated. More information about the error reponse is available in Webhooks payload.

includes
optional<object>
By default, the payloads only contain the data that changed. In order to generate payloads with more contextual data, an includes object may be added to the specification:

{
  "options": {
    "filters": {
      "fromSources": [
        "client"
      ],
      "dataTypes": [
        "tableData"
      ],
      "recordChangeScope": "tbl00000000000000",
      "watchDataInFieldIds": [
        "fld00000000000001",
        "fld00000000000002"
      ]
    },
    "includes": {
      "includeCellValuesInFieldIds": [
        "fld00000000000000"
      ]
    }
  }
}
includeCellValuesInFieldIds
optional<array of strings | "all">
A list of fields to include in the payload regardless of whether or not they changed.

includePreviousCellValues
optional<boolean>
If true, include the previous cell value in the payload.

includePreviousFieldDefinitions
optional<boolean>
If true, include the previous field definition in the payload.

List webhooks:

Webhooks
List webhooks
get
https://api.airtable.com/v0/bases/{baseId}/webhooks
Lists all webhooks that are registered for a base, along with their statuses.

Read level permissions are required in order to list webhooks.

Requirements
Authentication	Personal access token, OAuth integration
Scope	
webhook:manage

User role	
Base read-only

Billing plans	All plans
Path parameters
baseId
string
Response format
webhooks
array of the below object
id
string
An identifier for the webhook (WebhookId).

areNotificationsEnabled
boolean
Whether or not notifications are enabled for the webhook.

cursorForNextPayload
number
The cursor associated with the next payload that will be generated. This cursor will increase every time a new payload is generated for this webhook.

isHookEnabled
boolean
Whether or not the webhook is enabled. Webhooks may be turned off automatically such as when the specification becomes invalid. See error codes.

lastSuccessfulNotificationTime
string | null
An identifier for the created webhook.

notificationUrl
string | null
The url registered with the webhook. May be null if none was given.

expirationTime
optional<string>
The time when the webhook expires and is disabled in the ISO format. The webhook will not expire if this is null (in the case User API keys are used)

lastNotificationResult
Webhooks notification | null
specification
object
The specification registered with the webhook.

options
Webhooks specification
Request (example)
Copy
curl "https://api.airtable.com/v0/bases/{baseId}/webhooks" \
-H "Authorization: Bearer YOUR_TOKEN"
200 – Response (example)
{
  "webhooks": [
    {
      "areNotificationsEnabled": false,
      "cursorForNextPayload": 1,
      "expirationTime": "2023-01-20T00:00:00.000Z",
      "id": "ach00000000000000",
      "isHookEnabled": true,
      "lastNotificationResult": null,
      "lastSuccessfulNotificationTime": null,
      "notificationUrl": null,
      "specification": {
        "options": {
          "filters": {
            "dataTypes": [
              "tableData"
            ],
            "recordChangeScope": "tbltp8DGLhqbUmjK1"
          }
        }
      }
    }
  ]
}
Request (example)
Copy
curl "https://api.airtable.com/v0/bases/{baseId}/webhooks" \
-H "Authorization: Bearer YOUR_TOKEN"
200 – Response (example)
{
  "webhooks": [
    {
      "areNotificationsEnabled": true,
      "cursorForNextPayload": 1,
      "expirationTime": "2023-01-20T00:00:00.000Z",
      "id": "ach00000000000000",
      "isHookEnabled": true,
      "lastNotificationResult": {
        "completionTimestamp": "2022-02-01T21:25:05.663Z",
        "durationMs": 2.603,
        "retryNumber": 0,
        "success": true
      },
      "lastSuccessfulNotificationTime": "2022-02-01T21:25:05.663Z",
      "notificationUrl": "https://foo.com/receive-ping",
      "specification": {
        "options": {
          "filters": {
            "dataTypes": [
              "tableData"
            ],
            "recordChangeScope": "tbltp8DGLhqbUmjK1"
          }
        }
      }
    },
    {
      "areNotificationsEnabled": true,
      "cursorForNextPayload": 1,
      "expirationTime": "2023-01-25T00:00:00.000Z",
      "id": "ach00000000000001",
      "isHookEnabled": true,
      "lastNotificationResult": {
        "completionTimestamp": "2022-02-01T21:25:05.663Z",
        "durationMs": 2.603,
        "error": {
          "message": "The HTTP request returned a 503 status code instead of 200 or 204"
        },
        "retryNumber": 0,
        "success": false,
        "willBeRetried": true
      },
      "lastSuccessfulNotificationTime": null,
      "notificationUrl": "https://foo.com/receive-ping",
      "specification": {
        "options": {
          "filters": {
            "dataTypes": [
              "tableData"
            ],
            "recordChangeScope": "tbltp8DGLhqbUmjK1"
          }
        }
      }
    }
  ]
}

List webhook payloads:

Webhooks
List webhook payloads
get
https://api.airtable.com/v0/bases/{baseId}/webhooks/{webhookId}/payloads
Enumerate the update messages for a client to consume. Clients should call this after they receive a ping.

The webhook payload format can be found here and uses V2 cell value format.

Calling this endpoint will also extend the life of the webhook if it is active with an expiration time. The new expiration time will be 7 days after the list payloads call.

Requirements
Authentication	Personal access token, OAuth integration
Scope	
Scopes depend on the subscribed dataTypes, more details here

User role	
Base read-only

Billing plans	All plans
Path parameters
baseId
string
webhookId
string
Query parameters
cursor
optional<number>
The first time this action is called, the cursor argument may be omitted from the request and will default to 1. After that, cursors should be saved between invocations of this action. When a client receives a ping, it should use the last cursor that this action returned when polling for new payloads, no matter how old that cursor value is. The cursor argument indicates the transaction number of the payload to start listing from.

limit
optional<number>
If given the limit parameter specifies the maximum number of payloads to return in the response. A maximum of 50 payloads can be returned in a single request. A single payload can contain multiple updates.

Response format
cursor
number
The cursor field in the response indicates the transaction number of the payload that would immediately follow the last payload returned in this request. Payloads are returned in transaction order, so the last payload's transaction number is (cursor-1), the second-to-last payload's transaction number is (cursor-2), and so on. Each payload is associated with an incrementing cursor number. If there are no returned payloads, then the cursor in the response will be the same as the cursor specified in the request. The number of the next payload to be generated can be retrieved from cursorForNextPayload in list webhooks. Payloads are deleted from Airtable's servers after 1 week whether or not the client has seen them. The cursor value for the next payload is never reset, even if payloads are deleted.

mightHaveMore
boolean
Indicates whether or not there are additional payloads. If mightHaveMore is true, the client should send another request immediately and pass in the cursor from this response, as there could be more payloads. If mightHaveMore is false, there are definitely no more payloads.

payloads
array of Webhooks payloads
Request (example)
Copy
curl "https://api.airtable.com/v0/bases/{baseId}/webhooks/{webhookId}/payloads" \
-H "Authorization: Bearer YOUR_TOKEN"
200 – Response (example)
{
  "cursor": 5,
  "mightHaveMore": false,
  "payloads": [
    {
      "actionMetadata": {
        "source": "client",
        "sourceMetadata": {
          "user": {
            "email": "foo@bar.com",
            "id": "usr00000000000000",
            "permissionLevel": "create"
          }
        }
      },
      "baseTransactionNumber": 4,
      "payloadFormat": "v0",
      "timestamp": "2022-02-01T21:25:05.663Z"
    }
  ]
}

